<?xml version="1.0" encoding="UTF-8"?>
<mutations partial="true">
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Mathz.java</sourceFile><mutatedClass>com.pitest.app.Mathz</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>com.pitest.app.MathzTest.shouldAddCorrectly(com.pitest.app.MathzTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Mathz.java</sourceFile><mutatedClass>com.pitest.app.Mathz</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>6</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTest>com.pitest.app.MathzTest.shouldAddCorrectly(com.pitest.app.MathzTest)</killingTest><description>replaced int return with 0 for com/pitest/app/Mathz::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Mathz.java</sourceFile><mutatedClass>com.pitest.app.Mathz</mutatedClass><mutatedMethod>greaterOrEqual</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Mathz.java</sourceFile><mutatedClass>com.pitest.app.Mathz</mutatedClass><mutatedMethod>greaterOrEqual</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Mathz.java</sourceFile><mutatedClass>com.pitest.app.Mathz</mutatedClass><mutatedMethod>greaterOrEqual</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Mathz.java</sourceFile><mutatedClass>com.pitest.app.Mathz</mutatedClass><mutatedMethod>greaterOrEqual</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Mathz.java</sourceFile><mutatedClass>com.pitest.app.Mathz</mutatedClass><mutatedMethod>greaterOrEqual</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Mathz.java</sourceFile><mutatedClass>com.pitest.app.Mathz</mutatedClass><mutatedMethod>greaterOrEqual</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Mathz.java</sourceFile><mutatedClass>com.pitest.app.Mathz</mutatedClass><mutatedMethod>greaterOrEqual</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced boolean return with true for com/pitest/app/Mathz::greaterOrEqual</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>com.pitest.app.App</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>removed call to com/pitest/app/Mathz::&lt;init&gt;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>com.pitest.app.App</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>com.pitest.app.App</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>com.pitest.app.App</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to com/pitest/app/Mathz::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>com.pitest.app.App</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>15</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>com.pitest.app.App</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced call to com/pitest/app/Mathz::add with argument</description></mutation>
</mutations>
